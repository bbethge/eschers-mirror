#!/usr/bin/env python

import OpenGL
#OpenGL.ERROR_CHECKING = False
OpenGL.ERROR_ON_COPY = True
from OpenGL.GL import *
import pygame
from pygame.locals import *
import pango
import os
import sys
import time
import bisect
from Config import config
from Actor import Actor
#from RightTriGrid import RightTriGrid
from Layout import ScrollableLayout, AutosizedLayout
from MainLoop import MainLoop
from Button import Button

class VideoChooser:
	"""
	A screen that lets the user choose a video to play with.  The videos must be
	stored under a directory which is supplied to __init__.
	"""
	scrollAmount = 4
	class File:
		def __init__(self, index, name):
			self.index = index
			self.name = name
		def __cmp__(self, other):
			return self.index - other.index
	
	def __init__(self, videoDir):
		Stage.__init__(self)
		fileNames = []
		for root, dirs, dirFiles in os.walk(unicode(videoDir)):
			fileNames += dirFiles
		fileNames.sort()
		filesStr = u"\n".join(fileNames)
		self.files = []
		index = 0
		for fileName in fileNames:
			self.files.append(self.File(index, fileName))
			index += len(fileName) + 1
		self.files.append(self.File(index, None))
		
		self.layout = ScrollableLayout(0, 0, *config.window_size)
		self.layout.layout.set_text(filesStr)
		layoutAttrs = pango.AttrList()
		layoutAttrs.insert(
			pango.AttrForeground(
				0x8000, 0x8000, 0xff00, 0, len(filesStr)))
		self.layout.layout.set_attributes(layoutAttrs)
		self.layout.layoutChanged()
		self.selectedIndex = 0  # Index in filesStr of currently selected option
		
		glClearColor(0.5, 0.0, 0.0, 1.0)
	
	def draw(self):
		self.layout.draw()
	
	def handleEvent(self, event):
		if event.type == KEYDOWN:
			self.quit()
		elif event.type == MOUSEMOTION:
			index = self.layout.xy_to_index(
				event.pos[0], config.window_size[1]-event.pos[1]-1)
			filesIndex = (
				bisect.bisect_right(self.files, self.File(index, None)) - 1)
			start = self.files[filesIndex].index
			if start != self.selectedIndex:
				self.selectedIndex = start
				end = self.files[filesIndex+1].index
				layoutAttrs = pango.AttrList()
				layoutAttrs.insert(
					pango.AttrForeground(
						0x8000, 0x8000, 0xff00, 0, self.files[-1].index))
				layoutAttrs.insert(
					pango.AttrForeground(0xffff, 0xffff, 0, start, end))
				self.layout.layout.set_attributes(layoutAttrs)
				self.layout.layoutChanged()
		elif event.type == MOUSEBUTTONDOWN:
			if event.button == 4:  # scroll up
				self.layout.scroll(0, self.scrollAmount)
			elif event.button == 5:  # scroll down
				self.layout.scroll(0, -self.scrollAmount)
			elif event.button == 1:
				index = self.layout.xy_to_index(*event.pos)
				filesIndex = (
					bisect.bisect_right(self.files, self.File(index, None)) - 1)
				self.quit(self.files[filesIndex].name)

if __name__ == '__main__':
	pygame.display.init()
	pygame.display.set_mode(config.window_size, pygame.OPENGL|pygame.DOUBLEBUF)
	pygame.display.set_caption("Escher's Mirror", "Escher's Mirror")
	
	glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
	
	glMatrixMode(GL_PROJECTION)
	glOrtho(0, config.window_size[0], 0, config.window_size[1], -1, 1)
	glMatrixMode(GL_MODELVIEW)
	glLoadIdentity()
	
	glEnable(GL_TEXTURE_2D)
	glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE)
	
	glEnableClientState(GL_TEXTURE_COORD_ARRAY)
	glEnableClientState(GL_VERTEX_ARRAY)
	glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
	
	main = MainLoop()
	b = Button(
		main, 200, 100, '<span size="larger" foreground="yellow">foobar</span>',
		[ 0., 0., 1. ])
	
	main.run()
	
	sys.exit(0)
	
	chooser = VideoChooser(config.video_dir)
	videoFile = chooser.run()
	
	if videoFile is not None:
		grid = RightTriGrid(
			os.path.join(config.video_dir, videoFile),
			config.grid_rows, config.grid_cols)
		grid.run()
	
	config.write()

# vim: set ts=4 sts=4 sw=4 noet :
